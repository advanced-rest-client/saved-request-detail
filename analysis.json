{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "Details applet for saved request object.\n\nIf the request is a history item the set `isHistory` property to `true`.\n\nThe applet doesn't support data edit. Element / app hosting this element\nmust handle events sent by this element and support edit action.\n\n### Example\n\n```html\n<saved-request-detail request=\"{...}\"></saved-request-detail>\n```\n\n### Styling\n\n`<saved-request-detail>` provides the following custom properties and\nmixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--saved-request-detail` | Mixin applied to the element | `{}`\n`--saved-request-detail-color` | Color of the element | `inherit`\n`--saved-request-detail-background-color` | Background color of the element | `inherit`\n`--saved-request-detail-padding` | Padding of the element. | ``\n`--saved-request-detail-description` | Mixin applied to request description | `{}`\n`--saved-request-detail-description-max-width` | Max width of the description element | `700px`\n`--saved-request-detail-description-color` | Color of the request description | `rgba(0, 0, 0, 0.64)`\n`--saved-request-detail-url-label` | Mixin applied to the  URL label | `{}`\n`--saved-request-detail-method-label` | Mixin applied to the `http-method-label` element | `{}`\n`--saved-request-detail-meta-row` | Mixin applied to the meta data list items | `{}`\n`--saved-request-detail-meta-row-label` | Mixin applied to the meta data label | `{}`\n`--saved-request-detail-meta-row-value` | Mixin applied to the meta data value | `{}`\n`--saved-request-detail-actions-container` | Mixin applied to the buttons container | `{}`\n`--saved-request-detail-action-buttons` | Mixin applied to the action buttons | `{}`\n`--saved-request-detail-action-icon` | Mixin applied to action buttons icons  | `{}`\n`--saved-request-detail-action-icon-color` | Color of the icon in the action button | `rgba(0, 0, 0, 0.54)`\n`--saved-request-detail-data-list-color` | Color of propery items | `rgba(0, 0, 0, 0.87)`,\n`--saved-request-detail-action-button-color` | Color of action button | `--primary-color`\n`--saved-request-detail-action-button-background-color` | Background color of action button | ``",
      "summary": "",
      "path": "saved-request-detail.html",
      "properties": [
        {
          "name": "request",
          "type": "Object | null | undefined",
          "description": "Request object to render.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 8
            },
            "end": {
              "line": 255,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_requestChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "isHistory",
          "type": "boolean | null | undefined",
          "description": "True if current item represent a history item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 8
            },
            "end": {
              "line": 260,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_projects",
          "type": "Array.<Object>",
          "description": "Projects data associated with the request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 8
            },
            "end": {
              "line": 265,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "isSaved",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the request has been saved in the data store\nwhether it's saved or history.\nBecause request object can have `_id` generated before saving it to\nthe store this relays on checking both `_id` and `_rev`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 8
            },
            "end": {
              "line": 276,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_requestChanged",
          "description": "Sets project data when `request` object change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 4
            },
            "end": {
              "line": 296,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_readProjects",
          "description": "Reads related project data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keys",
              "type": "Array.<String>",
              "description": "List of project IDs to read."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_processProjectsResponse",
          "description": "Processes query response from the model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data",
              "type": "?Array.<Object>",
              "description": "The response"
            },
            {
              "name": "keys",
              "type": "Array.<String>",
              "description": "Requested keys"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Processed response or undefined."
          }
        },
        {
          "name": "_dispatchModelQuery",
          "description": "Dispatches `project-model-query` custom event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 4
            },
            "end": {
              "line": 356,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keys",
              "type": "Array.<String>",
              "description": "List of project IDs to read."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event."
          }
        },
        {
          "name": "_openProject",
          "description": "Sends `navigate` event set to current read project.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 4
            },
            "end": {
              "line": 375,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deleteRequest",
          "description": "Sends non-bubbling `delete-request` event to the parent element to perform\ndelete action.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 380,
              "column": 4
            },
            "end": {
              "line": 387,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_editRequest",
          "description": "Sends non-bubbling `edit-request` event to the parent element to perform\nedit action.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 4
            },
            "end": {
              "line": 400,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasUpdated",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 402,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "updated"
            },
            {
              "name": "created"
            }
          ]
        },
        {
          "name": "_computeIsSaved",
          "description": "Computes value for `isSaved` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 418,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "request",
              "type": "Object",
              "description": "Passed request object"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if request has both `_id` and `_rev`."
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 246,
          "column": 2
        },
        "end": {
          "line": 444,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.SavedRequestDetail",
      "attributes": [
        {
          "name": "request",
          "description": "Request object to render.",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 8
            },
            "end": {
              "line": 255,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "is-history",
          "description": "True if current item represent a history item.",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 8
            },
            "end": {
              "line": 260,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-saved",
          "description": "Computed value, true if the request has been saved in the data store\nwhether it's saved or history.\nBecause request object can have `_id` generated before saving it to\nthe store this relays on checking both `_id` and `_rev`",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 8
            },
            "end": {
              "line": 276,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "delete-request",
          "description": "Fired when the user click on the \"delete\" action button.\n\nThis event does not bubbles.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "edit-request",
          "description": "Fired when the user click on the \"edit\" action button.\n\nThis event does not bubbles.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "navigate",
          "description": "Fired when the user opens the project item.\n\nThis event can be fired only if the request has a project.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "saved-request-detail",
      "mixins": [
        "Polymer.IronResizableBehavior"
      ]
    }
  ]
}
