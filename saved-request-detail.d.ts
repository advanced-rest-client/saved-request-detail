/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   saved-request-detail.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

declare namespace UiElements {

  /**
   * Details applet for saved request object.
   *
   * If the request is a history item the set `isHistory` property to `true`.
   *
   * The applet doesn't support data edit. Element / app hosting this element
   * must handle events sent by this element and support edit action.
   *
   * ### Example
   *
   * ```html
   * <saved-request-detail request="{...}"></saved-request-detail>
   * ```
   *
   * ### Styling
   *
   * `<saved-request-detail>` provides the following custom properties and
   * mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--saved-request-detail-color` | Color of the element | `inherit`
   * `--saved-request-detail-background-color` | Background color of the element | `inherit`
   * `--saved-request-detail-padding` | Padding of the element. | ``
   * `--saved-request-detail-description-max-width` | Max width of the description element | `700px`
   * `--saved-request-detail-description-color` | Color of the request description | `rgba(0, 0, 0, 0.64)`
   * `--saved-request-detail-action-icon-color` | Color of the icon in the action button | `rgba(0, 0, 0, 0.54)`
   * `--saved-request-detail-data-list-color` | Color of propery items | `rgba(0, 0, 0, 0.87)`,
   * `--saved-request-detail-action-button-color` | Color of action button | `--primary-color`
   * `--saved-request-detail-action-button-background-color` | Background color of action button | ``
   */
  class SavedRequestDetail extends
    Polymer.IronResizableBehavior(
    Object) {

    /**
     * Request object to render.
     */
    request: object|null|undefined;

    /**
     * True if current item represent a history item.
     */
    isHistory: boolean|null|undefined;

    /**
     * Projects data associated with the request.
     */
    _projects: Array<object|null>|null;

    /**
     * Computed value, true if the request has been saved in the data store
     * whether it's saved or history.
     * Because request object can have `_id` generated before saving it to
     * the store this relays on checking both `_id` and `_rev`
     */
    readonly isSaved: boolean|null|undefined;

    /**
     * Dispatches bubbling and composed custom event.
     * By default the event is cancelable until `cancelable` property is set to false.
     *
     * @param type Event type
     * @param detail A detail to set
     */
    _dispatch(type: String|null, detail: any|null): CustomEvent|null;

    /**
     * Disaptches `project-model-query` custom event.
     *
     * @param keys List of project IDs to retreive.
     */
    _disaptchQueryModel(keys: Array<String|null>|null): CustomEvent|null;

    /**
     * Sets project data when `request` object change.
     */
    _requestChanged(request: object|null): void;

    /**
     * Reads related project data.
     *
     * @param keys List of project IDs to read.
     */
    _readProjects(keys: Array<String|null>|null): Promise<any>|null;

    /**
     * Processes query response from the model.
     *
     * @param data The response
     * @param keys Requested keys
     * @returns Processed response or undefined.
     */
    _processProjectsResponse(data: Array<object|null>|null, keys: Array<String|null>|null): Array<object|null>|null|undefined;

    /**
     * Sends `navigate` event set to current read project.
     *
     * @returns Sent `navigate` event
     */
    _openProject(e: ClickEvent|null): CustomEvent|null;

    /**
     * Sends non-bubbling `delete-request` event to the parent element to perform
     * delete action.
     */
    _deleteRequest(): void;

    /**
     * Sends non-bubbling `edit-request` event to the parent element to perform
     * edit action.
     */
    _editRequest(): void;
    _computeHasUpdated(updated: any, created: any): any;

    /**
     * Computes value for `isSaved` property.
     *
     * @param request Passed request object
     * @returns True if request has both `_id` and `_rev`.
     */
    _computeIsSaved(request: object|null): Boolean|null;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "saved-request-detail": UiElements.SavedRequestDetail;
  }
}

export {};
